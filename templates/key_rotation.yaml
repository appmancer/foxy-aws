AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation Stack for Observing Key Rotation in Foxy"

Parameters:
  EnvironmentName:
    Type: String
    Description: The name of the environment (e.g., dev, staging, prod)
  KeyRotationRoleArn:
    Type: String
    Description: ARN of the IAM role for Lambda execution.
  UserPoolId:
    Type: String
    Description: The ID of the Cognito User Pool.

Resources:

  # 1Ô∏è‚É£ Lambda Function for Key Rotation
  KeyRotationLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "foxy-${EnvironmentName}-KeyRotationLambda"
      Handler: rotate_key_lambda.lambda_handler
      Role: !Ref RoleArn
      Runtime: python3.9
      Timeout: 10
      MemorySize: 128
      Code:
        S3Bucket: !Sub "foxy-${EnvironmentName}-lambda-deployments-${AWS::AccountId}"
        S3Key: lambda/function.zip
      Environment:
        Variables:
          ENVIRONMENT_NAME: !Ref EnvironmentName

  # 2Ô∏è‚É£ Lambda Execution Permissions
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref KeyRotationLambda
      Action: lambda:InvokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}"

  # 3Ô∏è‚É£ CloudWatch Log Group for Lambda Logs
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/foxy-${EnvironmentName}-KeyRotation" 
      RetentionInDays: 90

  # 4Ô∏è‚É£ CloudWatch Metric Filter for Key Rotation Events
  KeyRotationMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LambdaLogGroup
      FilterPattern: '{ $.event = "DID Key Rotation" }'
      MetricTransformations:
        - MetricNamespace: "FoxySecurity"
          MetricName: "DidKeyRotationCount"
          MetricValue: "1"

  # 5Ô∏è‚É£ CloudWatch Alarm for Missing Key Rotation
  KeyRotationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "foxy-${EnvironmentName}-DIDKeyRotationMissing"
      MetricName: "DidKeyRotationCount"
      Namespace: "FoxySecurity"
      Statistic: "Sum"
      Period: 86400 # 1 day
      EvaluationPeriods: 90 # Trigger if no rotation in 90 days
      Threshold: 1
      ComparisonOperator: "LessThanThreshold"
      AlarmActions:
        - !Ref SecurityNotificationsTopic

  # 6Ô∏è‚É£ SNS Topic for Key Rotation Alerts
  SecurityNotificationsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "Foxy-${EnvironmentName}-SecurityNotifications"
      TopicName: !Sub "foxy-${EnvironmentName}-SecurityNotifications"

  # 7Ô∏è‚É£ SNS Subscription (Email Notifications)
  SecurityNotificationsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref SecurityNotificationsTopic
      Protocol: email
      Endpoint: "foxy@getfoxy.app" 

  # 8Ô∏è‚É£ CloudWatch Dashboard
  KeyRotationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "foxy-${EnvironmentName}-KeyRotation"
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 6,
              "height": 3,
              "properties": {
                "metrics": [
                  [ "FoxySecurity", "DidKeyRotationCount" ]
                ],
                "period": 86400,
                "stat": "Sum",
                "title": "DID Key Rotations"
              }
            },
            {
              "type": "text",
              "x": 0,
              "y": 4,
              "width": 6,
              "height": 3,
              "properties": {
                "markdown": "## Key Rotation Status\nThis dashboard tracks key rotations. Alerts will be sent if rotations stop for more than 3 days."
              }
            }
          ]
        }

  # 9Ô∏è‚É£ EventBridge Rule to Trigger Key Rotation Every 90 Days
  KeyRotationSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: "rate(90 days)" 
      Targets:
        - Arn: !GetAtt KeyRotationLambda.Arn
          Id: "KeyRotationTarget"

  # üîπ Give EventBridge Permission to Invoke Lambda
  KeyRotationLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref KeyRotationLambda
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt KeyRotationSchedule.Arn

Outputs:

  LambdaFunctionName:
    Description: "Name of the Key Rotation Lambda function"
    Value: !Ref KeyRotationLambda

  LambdaFunctionArn:
    Description: "ARN of the Key Rotation Lambda function"
    Value: !GetAtt KeyRotationLambda.Arn

  LogGroup:
    Description: "CloudWatch Log Group for Key Rotation"
    Value: !Ref LambdaLogGroup

  SNSAlertTopic:
    Description: "SNS Topic for Key Rotation Alerts"
    Value: !Ref SecurityNotificationsTopic

  DashboardURL:
    Description: "CloudWatch Dashboard for Key Rotation"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home#dashboards:name=${KeyRotationDashboard}"
